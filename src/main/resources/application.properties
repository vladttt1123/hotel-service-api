spring.application.name=hotelreservation
management.endpoints.web.exposure.include=*
spring.h2.console.enabled=true
#spring.datasource.url=jdbc:h2:mem:testdb
spring.jpa.defer-datasource-initialization=true
spring.jpa.show-sql=false
spring.datasource.url=jdbc:mysql://localhost:3306/hotel-reservation-database
spring.datasource.username=admin-user
spring.datasource.password=dummypassword
spring.jpa.hibernate.ddl-auto=update
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQLDialect
spring.security.user.name=user
spring.security.user.password=password
# docker run --detach --env MYSQL_ROOT_PASSWORD=dummypassword --env MYSQL_USER=admin-user --env MYSQL_PASSWORD=dummypassword --env MYSQL_DATABASE=hotel-reservation-database --name mysql --publish 3306:3306 mysql:8-oracle
# mvn clean test -Pe2e-tests
# mvn clean test -Punit-tests
# docker-compose up -d
# create a repo on docker hub, then push it
#  exampke docker tag hotelreservation-api:latest vladtolos/hotel-service-api
logging.level.root=INFO
logging.level.org.springframework=INFO
logging.level.org.hibernate=INFO
logging.level.com.hotelreservation=INFO
#spring.jpa.show-sql=false
spring.jpa.properties.hibernate.show_sql=true
#spring.main.banner-mode=off

spring.main.allow-bean-definition-overriding=true
#git.commitId=${git.commit.id}

